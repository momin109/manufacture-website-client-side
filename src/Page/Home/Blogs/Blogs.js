import React from 'react';

const Blogs = () => {
    return (
        <div className='max-w-7xl mx-auto mt-12 '>
            <h2 className='text-center text-2xl font-bold mb-6 text-orange-600'>How will you improve the performance of a React Application?</h2>
            <p>অ্যাপ্লিকেশন পারফরম্যান্স অপ্টিমাইজ করা সেই ডেভেলপারদের জন্য চাবিকাঠি যারা ব্যবহারকারীর অভিজ্ঞতাকে একটি অ্যাপে রাখতে এবং নিযুক্ত রাখতে তাদের ইতিবাচক রাখতে সচেতন।
                <br />

                Akamai-এর গবেষণা অনুসারে, লোড টাইমে দ্বিতীয় বিলম্বের ফলে রূপান্তর 7 শতাংশ কমে যেতে পারে, যা ডেভেলপারদের জন্য অপ্টিমাইজড পারফরম্যান্স সহ অ্যাপ তৈরি করা অপরিহার্য করে তোলে।
                <br />
                প্রতিক্রিয়া অ্যাপ্লিকেশনগুলিতে, আমরা ডিফল্টরূপে একটি খুব দ্রুত UI নিশ্চিত করি৷ যাইহোক, একটি অ্যাপ্লিকেশন বৃদ্ধির সাথে সাথে বিকাশকারীরা কিছু পারফরম্যান্স সমস্যার সম্মুখীন হতে পারে।
                <br />
                এই নির্দেশিকায়, আমরা প্রাক-অপ্টিমাইজেশন কৌশল সহ একটি প্রতিক্রিয়া অ্যাপ্লিকেশনের কর্মক্ষমতা অপ্টিমাইজ করার পাঁচটি গুরুত্বপূর্ণ উপায় নিয়ে আলোচনা করব। এর মধ্যে রয়েছে:</p>
            <br />
            একটি প্রতিক্রিয়া অ্যাপ্লিকেশন অপ্টিমাইজ করার আগে, আমাদের অবশ্যই বুঝতে হবে যে কীভাবে প্রতিক্রিয়া তার UI আপডেট করে এবং কীভাবে একটি অ্যাপের কার্যকারিতা পরিমাপ করা যায়। এটি যেকোনো প্রতিক্রিয়া কর্মক্ষমতা সমস্যা সমাধান করা সহজ করে তোলে।

            <h2 className='text-center text-2xl pt-6 font-bold mb-6 text-orange-600'> What are the different ways to manage a state in a React application?</h2>
            <p>আপনার রিঅ্যাক্ট অ্যাপ্লিকেশানগুলিতে অবস্থা পরিচালনা করা useState বা useReducer ব্যবহার করার মতো সহজ নয়।
                <br />
                যখন আমরা আমাদের অ্যাপ্লিকেশানগুলিতে রাষ্ট্র সম্পর্কে কথা বলি, তখন কোন ধরনের রাষ্ট্র আসলে গুরুত্বপূর্ণ সে সম্পর্কে পরিষ্কার হওয়া গুরুত্বপূর্ণ।
                <br />
                আপনার প্রতিক্রিয়া অ্যাপগুলিতে আপনাকে সঠিকভাবে পরিচালনা করার জন্য চারটি প্রধান ধরণের রাষ্ট্র রয়েছে:
                <br />
                স্থানীয় রাষ্ট্র সম্ভবত প্রতিক্রিয়া পরিচালনা করার জন্য সবচেয়ে সহজ ধরনের রাষ্ট্র, বিবেচনা করে এটি পরিচালনা করার জন্য মূল প্রতিক্রিয়া লাইব্রেরিতে অনেকগুলি সরঞ্জাম তৈরি করা হয়েছে।
                <br />
                useState হল প্রথম টুল যা আপনার কম্পোনেন্টে স্টেট পরিচালনা করার জন্য পৌঁছাতে হবে।
                <br />
                এটি আদিম এবং বস্তুর মান সহ যেকোনো বৈধ ডেটা মান গ্রহণ করতে পারে। অতিরিক্তভাবে, এর সেটার ফাংশনটি কলব্যাক ফাংশন হিসাবে অন্যান্য উপাদানগুলিতে প্রেরণ করা যেতে পারে (ইউজকলব্যাকের মতো অপ্টিমাইজেশনের প্রয়োজন ছাড়াই)।</p>
            <h3 className='text-center text-2xl pt-6 font-bold mb-6 text-orange-600'>How does prototypical inheritance work?

            </h3>
            <p>জাভাস্ক্রিপ্ট একটি প্রোটোটাইপ-ভিত্তিক, অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং ভাষা। ES6 আপডেটের পরে, জাভাস্ক্রিপ্ট "প্রোটোটাইপল উত্তরাধিকার" এর জন্য অনুমতি দিয়েছে, যার অর্থ বস্তু এবং পদ্ধতিগুলি ভাগ করা, প্রসারিত এবং অনুলিপি করা যেতে পারে।
                <br />
                অবজেক্টের মধ্যে ভাগ করা কাঠামো (ডেটা ক্ষেত্র), আচরণ (ফাংশন/পদ্ধতি) এবং স্টেট (ডেটা মান) এর সহজ উত্তরাধিকার তৈরি করে।
                <br />
                জাভাস্ক্রিপ্ট হল প্রোটোটাইপ-সক্ষম ভাষার মধ্যে সবচেয়ে সাধারণ, এবং এর ক্ষমতা তুলনামূলকভাবে অনন্য। যথাযথভাবে ব্যবহার করা হলে, জাভাস্ক্রিপ্টে প্রোটোটাইপিকাল উত্তরাধিকার হল একটি শক্তিশালী টুল যা কোডিং-এর ঘন্টা বাঁচাতে পারে।
                <br />
                আজ, আমরা আপনাকে জাভাস্ক্রিপ্টের প্রোটোটাইপল উত্তরাধিকারের সাথে পরিচিত করতে চাই যাতে আপনি ES6 ক্ষমতার সাথে আপ টু ডেট হন।
                <br />
                প্রোটোটাইপিকাল উত্তরাধিকার অন্য বস্তু থেকে বস্তুর বৈশিষ্ট্য অ্যাক্সেস করার ক্ষমতা বোঝায়। বিদ্যমান অবজেক্ট কনস্ট্রাক্টরে নতুন বৈশিষ্ট্য এবং পদ্ধতি যোগ করতে আমরা একটি জাভাস্ক্রিপ্ট প্রোটোটাইপ ব্যবহার করি। আমরা তখন মূলত আমাদের JS কোডকে একটি প্রোটোটাইপ থেকে সম্পত্তির উত্তরাধিকারী হতে বলতে পারি। প্রোটোটাইপিকাল ইনহেরিটেন্স আমাদেরকে একটি রেফারেন্স পয়েন্টার ফাংশনের মাধ্যমে একটি জাভাস্ক্রিপ্ট অবজেক্ট থেকে অন্যটিতে বৈশিষ্ট্য বা পদ্ধতিগুলি পুনরায় ব্যবহার করতে দেয়।</p>

            <h3 className='text-center text-2xl pt-6 font-bold mb-6 text-orange-600'>You have an array of products. Each product has a name, price, description, etc. How will you implement a search to find products by name?</h3>
            <p>আমি এই প্রকল্পে আমার কার্টের মোট পরিমাণ এবং মোট মূল্য কীভাবে গণনা করব তা নিয়ে আটকে আছি। কাজটি হল একটি সাধারণ (প্রাথমিক) ই-কমার্স ওয়েবসাইট তৈরি করা যেখানে একজন গ্রাহক একটি পণ্যে ক্লিক করতে এবং তাদের কার্টে যোগ করতে সক্ষম হবেন (প্রোডাক্টের নাম, পরিমাণ এবং মূল্য প্রদর্শনের সাথে, পরিমাণ এবং মূল্য আপডেট করা উচিত) একজন গ্রাহক পণ্যের সাথে সংযুক্ত বোতামে কতবার ক্লিক করেন সে অনুযায়ী সঠিকভাবে।
                <br />
                এবং আমি শুধুমাত্র জাভাস্ক্রিপ্ট ব্যবহার করতে পারি (বা প্রয়োজন হলে html)।
                <br />
                আমি বেশিরভাগ কাজ করে ওয়েবসাইট আছে. কার্টে সবকিছু যোগ করা যেতে পারে এবং কার্ট প্রতিটি পণ্যের পরিমাণ এবং মূল্য ট্র্যাক রাখে।
                <br />
                কিন্তু আমি বুঝতে পারছি না কিভাবে এটি করা যায় তাই যখন আমি বাই বোতাম টিপুন, কার্টের নীচে, কার্টে যোগ করা সমস্ত পণ্যের মোট পরিমাণ এবং মোট মূল্য কার্টের নীচে একটি স্ট্রিংয়ে প্রদর্শিত হয়৷
                <br />
                আমি উত্তরের জন্য অনলাইনে অনুসন্ধান করার চেষ্টা করেছি কিন্তু আমি এটি বের করতে পারছি না।

                <br />

                আপনি যা কিছু ভাবতে পারেন তা ব্যাপকভাবে প্রশংসা করা হয় কারণ এই মুহুর্তে আমি সম্পূর্ণ অজ্ঞাত। এবং লক্ষ্য করার মতো, আমি জাভাস্ক্রিপ্টে সত্যিই নতুন!

            </p>

            <h3 className='text-center text-2xl pt-6 font-bold mb-6 text-orange-600'>What is a unit test? Why should write unit tests?</h3>
            <p>UNIT TESTING হল এক ধরনের সফটওয়্যার টেস্টিং যেখানে একটি সফটওয়্যারের পৃথক ইউনিট বা উপাদান পরীক্ষা করা হয়। উদ্দেশ্য হল সফ্টওয়্যার কোডের প্রতিটি ইউনিট প্রত্যাশিত হিসাবে কাজ করে তা যাচাই করা। ডেভেলপারদের দ্বারা একটি অ্যাপ্লিকেশনের বিকাশের (কোডিং পর্ব) সময় ইউনিট পরীক্ষা করা হয়। ইউনিট টেস্ট কোডের একটি বিভাগকে বিচ্ছিন্ন করে এবং এর সঠিকতা যাচাই করে। একটি ইউনিট একটি পৃথক ফাংশন, পদ্ধতি, পদ্ধতি, মডিউল বা বস্তু হতে পারে।
                <br />
                SDLC, STLC, V মডেলে, ইউনিট টেস্টিং হল ইন্টিগ্রেশন টেস্টিংয়ের আগে করা প্রথম স্তরের পরীক্ষা। ইউনিট টেস্টিং হল একটি হোয়াইটবক্স টেস্টিং কৌশল যা সাধারণত ডেভেলপার দ্বারা সঞ্চালিত হয়। যদিও, একটি ব্যবহারিক জগতে সময়ের সংকট বা পরীক্ষায় ডেভেলপারদের অনিচ্ছার কারণে, QA ইঞ্জিনিয়াররাও ইউনিট পরীক্ষা করে।
                <br />
                ইউনিট টেস্টিং গুরুত্বপূর্ণ কারণ সফ্টওয়্যার ডেভেলপাররা কখনও কখনও ন্যূনতম ইউনিট পরীক্ষা করে সময় বাঁচানোর চেষ্টা করে এবং এটি পৌরাণিক কারণ অনুপযুক্ত ইউনিট পরীক্ষার ফলে সিস্টেম টেস্টিং, ইন্টিগ্রেশন টেস্টিং এবং এমনকি অ্যাপ্লিকেশন তৈরি হওয়ার পরে বিটা টেস্টিং-এর সময় উচ্চ খরচের ত্রুটি সংশোধন করা হয়। প্রাথমিক বিকাশে যদি সঠিক ইউনিট পরীক্ষা করা হয়, তবে এটি শেষ পর্যন্ত সময় এবং অর্থ সাশ্রয় করে।
            </p>

        </div>
    );
};

export default Blogs;